name: Generate plantuml files (.puml)

#AT LONG LAST THIS THING ACTUALLY WORKS!!!!

on:
  push:
    tags:
      - puml**
    branches:
      - master
      - main
  pull_request:
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: checkout sourced
        uses: actions/checkout@v2
        with:
          path: './mainrepo'
          fetch-depth: 0
      - name: checkoutplantuml
        uses: actions/checkout@v2
        with:
          repository: bykof/go-plantuml
          path: './plantuml'
      - name: run go stuff
        run: |
            echo "START GO STUFF"
            cd ./plantuml
            go mod tidy
            go run . generate -d ../mainrepo -r
            echo "CHECK FOR GRAPH.PUML"
            ls -l | grep ".puml"
            echo "COPY..."
            cp graph.puml ../mainrepo
            cd ../mainrepo
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add graph.puml
            git commit -m "generated"
            git push
      - name: Checkout Source 
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed UML files
        id: getfile
        run: |
          git diff-tree -r --no-commit-id --summary ${{ github.sha }} \
          | awk -F' ' '{
            # ensure we are not trying to process deleted files
            # only process puml files
            # do not try to process our theme or custom config
            if ( $1 !~ /^delete$/ && $4 ~ /\.puml$/ && $4 !~ /(theme|config)\.puml$/ )
            {
              # only print the file name and strip newlines for spaces
              printf "::set-output name=files::" "%s ", $4
            }
          }
          END { print "" } # ensure we do print a newline at the end
          '
      - name: UML files considered echo output
        run: |
          echo ${{ steps.getfile.outputs.files }}
      - name: Generate PNG Diagrams
        uses: cloudbees/plantuml-github-action@master
        with:
            args: -v -tpng ${{ steps.getfile.outputs.files }}

